# 1회 본선 진출자 100명 중 21명에게 아래와 같은 기준으로 상금을 부여
# 2회 본선 진출자 64명 중 31명에게 아래와 같은 기준으로 상금을 부여

# 제1회 코드 페스티벌 본선에 진출하여 a등(1 ≤ a ≤ 100)등을 하였다. 단, 진출하지 못했다면 a = 0으로 둔다.
# 제2회 코드 페스티벌 본선에 진출하여 b등(1 ≤ b ≤ 64)등을 할 것이다. 단, 진출하지 못했다면 b = 0으로 둔다.

# 첫 번째 줄에 제이지가 상상력을 발휘하여 가정한 횟수 T(1 ≤ T ≤ 1,000)가 주어진다.
# 다음 T개 줄에는 한 줄에 하나씩 제이지가 해본 가정에 대한 정보가 주어진다. 각 줄에는 두 개의 음이 아닌 정수 a(0 ≤ a ≤ 100)와 b(0 ≤ b ≤ 64)가 공백 하나를 사이로 두고 주어진다.

T = int(input())
price = [0]*T
for i in range(T):
    a, b = map(int,input().split())
    if(a==1):
        a = 5000000
    elif(1<a<=3):
        a = 3000000
    elif(4<=a<=6):
        a = 2000000
    elif(7<=a<=10):
        a = 500000
    elif(11<=a<=15):
        a = 300000
    elif(16<=a<=21):
        a = 100000
    else:
        a = 0
    
    if(b==1):
        b = 5120000
    elif(1<b<=3):
        b = 2560000
    elif(4<=b<=7):
        b = 1280000
    elif(8<=b<=15):
        b = 640000
    elif(16<=b<=31):
        b = 320000
    else:
        b = 0
    price[i] = a+b

for j in price:
    print(j)

# print(*j)에서 발생하는 오류의 주된 원인은 print(*j) 구문이 j 변수를 가변 인자(unpacking)로 처리하려 시도하기 때문입니다.
# 여기서 j는 price 리스트의 각 요소를 반복하며 참조하는 변수로, 각 요소는 정수형(int)입니다. 
# Python에서 * 연산자는 iterable 객체(예: 리스트, 튜플)의 요소를 함수의 인자로 전달할 때 사용되며, 각 요소를 별도의 인자로 분리합니다. 
# 그러나 j는 정수형 값이므로, iterable이 아니기 때문에 * 연산자를 사용할 수 없습니다.
# print(*j) 대신에 단순히 print(j)를 사용해야 합니다. print(j)는 j 변수의 값을 그대로 출력하며, 이 경우 price 리스트의 각 요소(정수형 값)를 순서대로 출력합니다.
# 따라서, 코드의 해당 부분을 다음과 같이 수정해야 합니다: