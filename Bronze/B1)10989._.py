import sys

num = [0] * (10001) 
# 여기서 num = [0] * (10000001) 구문은 0에서 10,000,000까지 각 숫자의 발생 횟수를 추적하기 위한 목적으로, 
# 각 숫자를 인덱스로 사용하여 그 숫자가 몇 번 등장했는지를 저장하는 데 사용되기 때문에 인덱스가 0부터가 아닌 1부터 시작해야 한다.
# 오답 1 - 첫째 줄에 수의 개수 N(1 ≤ N ≤ 10,000,000)이 주어진다. 둘째 줄부터 N개의 줄에는 수가 주어진다. 이 수는 10,000보다 작거나 같은 자연수이다.
#          리스트의 각 항목은 각 숫자의 발생 횟수를 추적하기 위한 목적이지 그 숫자를 의미하는게 아니므로, num[10,000,000]이 아닌, num[10,000] = 10,000,000 이란 뜻이다
#          즉, 선언해야 하는 리스트의 갯수는 10,000 +1 개이다. 만약 10,000,001개의 리스트를 선언하게 된다면 정수를 저장하는 데 필요한 메모리는 대략적으로 280MB가 넘게 된다.

n = int(sys.stdin.readline().rstrip())
for i in range(n):
    num[int(sys.stdin.readline())] +=1
    # 입력받은 숫자 부분의 리스트 항목에 +1 = num[1] +1, num[2] +2

# for i in range(len(num)):
#     if num[i] != 0: # 최초 선언한 10001개의 리스트 중 빈칸이 아닐 때 출력
#         print(i)
# 이렇게 하면 안되는 이유는 같은 숫자가 여러번 나올 수도 있기 때문
# 즉 '첫번째' 리스트의 항목이 4 라면 최종 출력 시 num[1] = 4 가 아닌 1이 총 4번 출력되어야 함

for i in range(len(num)):
    if num[i] != 0:
        for j in range(num[i]):
            print(i)

# 메모리 초과 발생 이유
# (1) sort,sorted를 사용
# (2) for 문 안에 append를 작성
# 계수정렬 관련 글 https://kill-xxx.tistory.com/entry/python-%EA%B3%84%EC%88%98%EC%A0%95%EB%A0%AC